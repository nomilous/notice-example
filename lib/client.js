// Generated by CoffeeScript 1.6.3
var CapsuleEmitter;

CapsuleEmitter = require('./client/capsule_emitter').CapsuleEmitter;

exports.start = function(callback) {
  return CapsuleEmitter.create({
    title: 'Capsule Emitter',
    uuid: 2,
    context: {
      "this": 'is sent to the hub at handshake',
      and: 'is available alongside each capsule traversal',
      that: 'originated from this client'
    },
    cache: {
      "this": 'is kept on the client side',
      and: 'is available alongside local traversals'
    },
    ticks: {
      health: {
        interval: 1000
      }
    },
    connect: {
      secret: 'âˆ†',
      adaptor: 'socket.io',
      url: 'http://localhost:10001',
      errorWait: 1000,
      rejectUnauthorized: false
    }
  }, function(error, emitter) {
    if (error != null) {
      return callback(error);
    }
    emitter.use({
      title: 'put in a hidden timestamp'
    }, function(next, capsule, traversal) {
      console.log(capsule);
      capsule.$set({
        timestamp: new Date,
        hidden: true,
        "protected": true
      });
      return next();
    });
    setInterval((function() {
      return emitter.request();
    }), 1000);
    return callback(null, emitter);
  });
};
