// Generated by CoffeeScript 1.6.3
var Client, MessageBus, tools;

MessageBus = require('./server/message_bus').MessageBus;

Client = require('dinkum').Client;

tools = require('notice').tools;

exports.start = function(callback) {
  return MessageBus.create({
    title: 'Message Bus Title',
    uuid: 1,
    listen: {
      secret: 'âˆ†',
      adaptor: 'socket.io',
      port: 10001
    },
    cache: {
      'preloaded-key': {}
    },
    tools: {
      elastic: Client.create({
        transport: 'http',
        port: 9200
      }),
      'class-example': new tools.NotableClass,
      'closure-example': tools.NotableClosure.create()
    }
  }, function(error, hub) {
    if (error != null) {
      return callback(error);
    }
    hub.use({
      title: 'initializer',
      description: "First middleware is usefull for filtering builtin control capsules."
    }, function(next, capsule, traveral) {
      if (capsule.$$control != null) {
        return next.cancel();
      }
      return next();
    });
    hub.use({
      title: 'testing things'
    }, function(next, capsule, _arg) {
      var tools;
      tools = _arg.tools;
      console.log(tools['class-example']);
      return next();
    });
    hub.use({
      title: 'example',
      description: "A second middleware to play with."
    }, function(next, capsule, _arg) {
      var cache, tools;
      tools = _arg.tools, cache = _arg.cache;
      return tools.elastic.put({
        path: '/test-database/test-table/id',
        'application/json': capsule
      }).then(function(result) {
        cache.result = result;
        return next();
      });
    });
    return callback(null, hub);
  });
};
